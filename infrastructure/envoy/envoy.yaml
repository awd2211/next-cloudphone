# Envoy Proxy 配置 - 云手机平台 API Gateway
# 版本: Envoy v1.28
# 功能: 熔断器、限流、重试、超时、负载均衡、健康检查

# ==========================================
# 管理接口配置
# ==========================================
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901  # 管理界面端口

# ==========================================
# 静态资源配置
# ==========================================
static_resources:
  
  # ==========================================
  # 监听器配置（入口流量）
  # ==========================================
  listeners:
  
  # ---------- HTTP 监听器 ----------
  - name: http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000  # Envoy HTTP 入口
    
    filter_chains:
    - filters:
      # HTTP 连接管理器
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          
          stat_prefix: ingress_http
          codec_type: AUTO
          
          # 路由配置
          route_config:
            name: local_route
            virtual_hosts:
            
            # ========== API Gateway 路由 ==========
            - name: api_gateway
              domains: ["*"]
              
              # CORS 配置
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: \*
                allow_methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
                allow_headers: "Content-Type, Authorization, X-Request-ID, Accept, Origin"
                expose_headers: "X-Request-ID"
                max_age: "86400"
                allow_credentials: true
              
              routes:
              
              # ---------- User Service ----------
              - match:
                  prefix: "/api/users"
                route:
                  cluster: user-service
                  timeout: 10s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure,refused-stream"
                    num_retries: 3
                    per_try_timeout: 3s
                    retry_host_predicate:
                    - name: envoy.retry_host_predicates.previous_hosts
                    host_selection_retry_max_attempts: 5
                # 限流配置
                typed_per_filter_config:
                  envoy.filters.http.local_ratelimit:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                    stat_prefix: user_service_ratelimit
                    token_bucket:
                      max_tokens: 200
                      tokens_per_fill: 200
                      fill_interval: 1s
              
              # ---------- Device Service ----------
              - match:
                  prefix: "/api/devices"
                route:
                  cluster: device-service
                  timeout: 10s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure"
                    num_retries: 3
                    per_try_timeout: 3s
                typed_per_filter_config:
                  envoy.filters.http.local_ratelimit:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                    stat_prefix: device_service_ratelimit
                    token_bucket:
                      max_tokens: 200
                      tokens_per_fill: 200
                      fill_interval: 1s
              
              # ---------- App Service ----------
              - match:
                  prefix: "/api/apps"
                route:
                  cluster: app-service
                  timeout: 30s  # 应用安装时间较长
                  retry_policy:
                    retry_on: "5xx,reset"
                    num_retries: 2
                    per_try_timeout: 10s
              
              # ---------- Billing Service ----------
              - match:
                  prefix: "/api/billing"
                route:
                  cluster: billing-service
                  timeout: 10s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure"
                    num_retries: 3
                    per_try_timeout: 3s
              
              # ---------- Notification Service ----------
              - match:
                  prefix: "/api/notifications"
                route:
                  cluster: notification-service
                  timeout: 5s
                  retry_policy:
                    retry_on: "5xx"
                    num_retries: 2
              
              # ---------- Scheduler Service ----------
              - match:
                  prefix: "/api/scheduler"
                route:
                  cluster: scheduler-service
                  timeout: 10s
              
              # ---------- Media Service (WebRTC) ----------
              - match:
                  prefix: "/api/media"
                route:
                  cluster: media-service
                  timeout: 30s
                  upgrade_configs:
                  - upgrade_type: websocket  # 支持 WebSocket
              
              # ---------- 默认路由（转发到 NestJS API Gateway）----------
              - match:
                  prefix: "/"
                route:
                  cluster: api-gateway
                  timeout: 30s
          
          # ==========================================
          # HTTP 过滤器链
          # ==========================================
          http_filters:
          
          # 1. CORS 过滤器
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          
          # 2. 限流过滤器
          - name: envoy.filters.http.local_ratelimit
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              stat_prefix: http_local_rate_limiter
              token_bucket:
                max_tokens: 1000
                tokens_per_fill: 1000
                fill_interval: 1s
              filter_enabled:
                runtime_key: local_rate_limit_enabled
                default_value:
                  numerator: 100
                  denominator: HUNDRED
              filter_enforced:
                runtime_key: local_rate_limit_enforced
                default_value:
                  numerator: 100
                  denominator: HUNDRED
              response_headers_to_add:
              - append: false
                header:
                  key: x-local-rate-limit
                  value: 'true'
          
          # 3. 路由过滤器（必需）
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          
          # 访问日志配置
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                json_format:
                  timestamp: "%START_TIME%"
                  method: "%REQ(:METHOD)%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  protocol: "%PROTOCOL%"
                  response_code: "%RESPONSE_CODE%"
                  bytes_sent: "%BYTES_SENT%"
                  bytes_received: "%BYTES_RECEIVED%"
                  duration: "%DURATION%"
                  upstream_host: "%UPSTREAM_HOST%"
                  user_agent: "%REQ(USER-AGENT)%"
                  request_id: "%REQ(X-REQUEST-ID)%"
                  authority: "%REQ(:AUTHORITY)%"
                  upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"

  # ==========================================
  # 集群配置（上游服务）
  # ==========================================
  clusters:
  
  # ---------- API Gateway（NestJS）----------
  - name: api-gateway
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    # 健康检查
    health_checks:
    - timeout: 3s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
        expected_statuses:
        - start: 200
          end: 299
    
    # 熔断器配置
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 1024
        max_pending_requests: 1024
        max_requests: 1024
        max_retries: 3
    
    # 异常检测（自动摘除不健康节点）
    outlier_detection:
      consecutive_5xx: 5
      interval: 30s
      base_ejection_time: 30s
      max_ejection_percent: 50
      enforcing_consecutive_5xx: 100
    
    load_assignment:
      cluster_name: api-gateway
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api-gateway  # Docker 容器名
                port_value: 30000
  
  # ---------- User Service ----------
  - name: user-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 512
        max_pending_requests: 512
        max_requests: 512
        max_retries: 3
    
    outlier_detection:
      consecutive_5xx: 5
      interval: 30s
      base_ejection_time: 30s
      max_ejection_percent: 50
    
    load_assignment:
      cluster_name: user-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: user-service
                port_value: 30001
  
  # ---------- Device Service ----------
  - name: device-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 512
        max_pending_requests: 512
        max_requests: 512
        max_retries: 3
    
    outlier_detection:
      consecutive_5xx: 5
      interval: 30s
      base_ejection_time: 30s
      max_ejection_percent: 50
    
    load_assignment:
      cluster_name: device-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: device-service
                port_value: 30002
  
  # ---------- App Service ----------
  - name: app-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 3s
      interval: 15s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 256
        max_pending_requests: 256
        max_requests: 256
        max_retries: 2
    
    outlier_detection:
      consecutive_5xx: 3
      interval: 30s
      base_ejection_time: 60s
      max_ejection_percent: 30
    
    load_assignment:
      cluster_name: app-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: app-service
                port_value: 30003
  
  # ---------- Billing Service ----------
  - name: billing-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 512
        max_pending_requests: 512
        max_requests: 512
        max_retries: 3
    
    outlier_detection:
      consecutive_5xx: 5
      interval: 30s
      base_ejection_time: 30s
      max_ejection_percent: 50
    
    load_assignment:
      cluster_name: billing-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: billing-service
                port_value: 30005
  
  # ---------- Notification Service ----------
  - name: notification-service
    connect_timeout: 3s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 256
        max_pending_requests: 256
        max_requests: 256
    
    load_assignment:
      cluster_name: notification-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: notification-service
                port_value: 30006
  
  # ---------- Scheduler Service ----------
  - name: scheduler-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 15s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 128
        max_pending_requests: 128
        max_requests: 128
    
    load_assignment:
      cluster_name: scheduler-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: scheduler-service
                port_value: 30004
  
  # ---------- Media Service (Go + WebRTC) ----------
  - name: media-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/health"
    
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 1024
        max_pending_requests: 1024
        max_requests: 1024
    
    load_assignment:
      cluster_name: media-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: media-service
                port_value: 30007

# ==========================================
# 分层配置（可选，用于更复杂的场景）
# ==========================================
layered_runtime:
  layers:
  - name: static_layer
    static_layer:
      overload:
        global_downstream_max_connections: 50000

