# 监控系统完整部署
# Jaeger + Prometheus + Grafana

version: '3.8'

services:
  # ==========================================
  # Jaeger - 分布式追踪系统
  # ==========================================
  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: cloudphone-jaeger
    
    ports:
      - "5775:5775/udp"     # accept zipkin.thrift over compact thrift protocol
      - "6831:6831/udp"     # accept jaeger.thrift over compact thrift protocol
      - "6832:6832/udp"     # accept jaeger.thrift over binary thrift protocol
      - "5778:5778"         # serve configs
      - "16686:16686"       # Jaeger UI
      - "14268:14268"       # accept jaeger.thrift directly from clients
      - "14250:14250"       # accept model.proto
      - "9411:9411"         # Zipkin compatible endpoint
    
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    
    volumes:
      - jaeger-data:/badger
    
    networks:
      - cloudphone-network
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:16686"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    labels:
      - "com.cloudphone.service=jaeger"
      - "com.cloudphone.description=Distributed Tracing"

  # ==========================================
  # Prometheus - 指标收集
  # ==========================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: cloudphone-prometheus
    
    ports:
      - "9090:9090"
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus-data:/prometheus
    
    networks:
      - cloudphone-network
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    labels:
      - "com.cloudphone.service=prometheus"
      - "com.cloudphone.description=Metrics Collection"

  # ==========================================
  # Grafana - 可视化仪表盘
  # ==========================================
  grafana:
    image: grafana/grafana:10.2.2
    container_name: cloudphone-grafana
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    
    networks:
      - cloudphone-network
    
    restart: unless-stopped
    
    depends_on:
      - prometheus
      - jaeger
    
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    labels:
      - "com.cloudphone.service=grafana"
      - "com.cloudphone.description=Visualization Dashboard"

  # ==========================================
  # AlertManager - 告警管理（可选）
  # ==========================================
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: cloudphone-alertmanager
    
    ports:
      - "9093:9093"
    
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    
    networks:
      - cloudphone-network
    
    restart: unless-stopped
    
    labels:
      - "com.cloudphone.service=alertmanager"
      - "com.cloudphone.description=Alert Management"

  # ==========================================
  # Node Exporter - 系统指标（可选）
  # ==========================================
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: cloudphone-node-exporter
    
    ports:
      - "9100:9100"
    
    command:
      - '--path.rootfs=/host'
    
    volumes:
      - /:/host:ro,rslave
    
    networks:
      - cloudphone-network
    
    restart: unless-stopped
    
    labels:
      - "com.cloudphone.service=node-exporter"
      - "com.cloudphone.description=System Metrics"

networks:
  cloudphone-network:
    external: true

volumes:
  jaeger-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local


