name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 前端测试和构建
  frontend-admin:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/admin
    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: frontend/admin/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - name: Lint
      run: pnpm lint || true

    - name: Build
      run: pnpm build

  # API 网关测试
  api-gateway:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/api-gateway

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cloudphone_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: backend/api-gateway/pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - name: Run tests
      run: pnpm test || true
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: cloudphone_test
        JWT_SECRET: test-secret

    - name: Build
      run: pnpm build

  # Go 流媒体服务测试
  media-service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/media-service
    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache-dependency-path: backend/media-service/go.sum

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./... || true

    - name: Build
      run: go build -o media-service main.go

  # Python 调度服务测试
  scheduler-service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/scheduler-service
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: backend/scheduler-service/requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: pytest || true

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
