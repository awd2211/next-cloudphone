import { DataSource } from 'typeorm';
import { Plan, PlanType, PlanStatus, BillingCycle } from '../plans/entities/plan.entity';

export async function seedPlans(dataSource: DataSource) {
  const planRepository = dataSource.getRepository(Plan);

  // 检查是否已经有套餐数据
  const existingPlans = await planRepository.count();
  if (existingPlans > 0) {
    console.log('✅ Plans already seeded, skipping...');
    return;
  }

  const plans: Partial<Plan>[] = [
    {
      code: 'free',
      name: '免费版',
      description: '适合个人开发者和小型项目体验云手机功能',
      type: PlanType.PREPAID,
      billingCycle: BillingCycle.MONTHLY,
      price: 0,
      currency: 'CNY',
      maxDevices: 1,
      maxCpuCores: 2,
      maxMemoryMB: 2048,
      maxStorageGB: 10,
      maxApiCallsPerDay: 1000,
      features: ['basic_support', 'standard_performance'],
      trialDays: 0,
      hasFreeTrial: false,
      status: PlanStatus.ACTIVE,
      isPublic: true,
      isRecommended: false,
      sortOrder: 1,
      badge: '免费',
      color: '#52c41a',
    },
    {
      code: 'basic',
      name: '基础版',
      description: '适合小型团队和轻量级应用',
      type: PlanType.SUBSCRIPTION,
      billingCycle: BillingCycle.MONTHLY,
      price: 99,
      originalPrice: 129,
      currency: 'CNY',
      maxDevices: 5,
      maxCpuCores: 4,
      maxMemoryMB: 4096,
      maxStorageGB: 50,
      maxApiCallsPerDay: 10000,
      features: ['email_support', 'standard_performance', 'basic_analytics', 'snapshot_backup'],
      trialDays: 7,
      hasFreeTrial: true,
      status: PlanStatus.ACTIVE,
      isPublic: true,
      isRecommended: false,
      sortOrder: 2,
      badge: null,
      color: '#1890ff',
    },
    {
      code: 'pro',
      name: '专业版',
      description: '适合中型团队和高性能需求',
      type: PlanType.SUBSCRIPTION,
      billingCycle: BillingCycle.MONTHLY,
      price: 299,
      originalPrice: 399,
      currency: 'CNY',
      maxDevices: 20,
      maxCpuCores: 8,
      maxMemoryMB: 8192,
      maxStorageGB: 200,
      maxApiCallsPerDay: 100000,
      features: [
        'priority_support',
        'high_performance',
        'advanced_analytics',
        'snapshot_backup',
        'gpu_support',
        'custom_template',
        'api_access',
      ],
      trialDays: 14,
      hasFreeTrial: true,
      status: PlanStatus.ACTIVE,
      isPublic: true,
      isRecommended: true,
      sortOrder: 3,
      badge: '推荐',
      color: '#722ed1',
    },
    {
      code: 'enterprise',
      name: '企业版',
      description: '适合大型企业和定制化需求',
      type: PlanType.SUBSCRIPTION,
      billingCycle: BillingCycle.MONTHLY,
      price: 999,
      originalPrice: 1299,
      currency: 'CNY',
      maxDevices: 100,
      maxCpuCores: 32,
      maxMemoryMB: 32768,
      maxStorageGB: 1000,
      maxApiCallsPerDay: null, // 无限制
      features: [
        'dedicated_support',
        'ultra_performance',
        'advanced_analytics',
        'snapshot_backup',
        'gpu_support',
        'custom_template',
        'api_access',
        'private_deployment',
        'sla_guarantee',
        'custom_integration',
        'white_label',
      ],
      trialDays: 30,
      hasFreeTrial: true,
      status: PlanStatus.ACTIVE,
      isPublic: true,
      isRecommended: false,
      sortOrder: 4,
      badge: '企业',
      color: '#fa541c',
    },
    {
      code: 'payg',
      name: '按量付费',
      description: '根据实际使用量计费，灵活便捷',
      type: PlanType.POSTPAID,
      billingCycle: BillingCycle.HOURLY,
      price: 0.5, // 每小时每设备
      currency: 'CNY',
      maxDevices: 50,
      maxCpuCores: 16,
      maxMemoryMB: 16384,
      maxStorageGB: 500,
      maxApiCallsPerDay: 50000,
      features: [
        'email_support',
        'standard_performance',
        'basic_analytics',
        'snapshot_backup',
        'pay_as_you_go',
      ],
      trialDays: 0,
      hasFreeTrial: false,
      status: PlanStatus.ACTIVE,
      isPublic: true,
      isRecommended: false,
      sortOrder: 5,
      badge: '灵活',
      color: '#13c2c2',
    },
  ];

  const createdPlans = planRepository.create(plans);
  await planRepository.save(createdPlans);

  console.log(`✅ Successfully seeded ${createdPlans.length} plans`);
}
